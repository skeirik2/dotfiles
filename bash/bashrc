# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Uncomment to enable debugging mode
# DEBUG=1

# Setup our environment
export EDITOR=nvim
export XDG_CONFIG_HOME=~/.config
export XDG_CACHE_HOME=~/.cache
export XDG_DATA_HOME=~/.local/share
export EXECIGNORE="$EXECIGNORE:*dll"
export LESS="-FRXK"

# Setup path
export LOCAL_BUILD_BIN=~/.config/local/build/local/bin
export LOCAL_BIN=~/.local/bin
export PATH="$LOCAL_BUILD_BIN:$LOCAL_BIN:$PATH"

# startup tmux unless we don't need to
if [ -z $DEBUG ] && [ $TERM != "linux" ] && [ -z $INSIDE_EMACS ] && [ -z $TMUX ] && [ -x "$(command -v tmux)" ]; then
  # pretend we are xterm
  export TERM=xterm-256color
  # clear the terminal title
  echo -ne "\033]0;\007"
  exec tmux -f ~/.config/tmux/tmux.conf
else
  export TERM=xterm-256color
fi

# color initialization when we aren't in a primitive terminal
if [ -z $DEBUG ] && [ -z $INSIDE_EMACS ] && [ $TERM != "linux" ]; then
  # disable software control flow terminal shortcuts ctrl+S/ctrl+Q
  # but allow internal libraries to use this mechanism if they wish
  stty -ixon

  # setup colorscheme from base16 shell
  source ~/.config/bash/base16-shell/scripts/base16-onedark.sh

  # set dircolors
  if [ -e "$HOME/.config/dircolors/dircolors" ] ; then
    eval "$(dircolors -b $HOME/.config/dircolors/dircolors)"
  fi

  # setup fancy prompt
  # slow on DrvFS
  source ~/.config/bash/minimalist-git-prompt.sh
  # PS1="\W \\$ "

  # load fzf bindings (only makes sense under readline)
  source ~/.config/bash/fzf/completion.bash
  source ~/.config/bash/fzf/key-bindings.bash
else
  PS1="\W \\$ "
fi

# setup functions/aliases after defining environment
alias wget="wget --hsts-file=\"$XDG_CACHE_HOME/wget-hsts\""
# alias ls='exa ' # let's wait until the bugs are worked out more
alias ls='ls --color=auto'
alias vi='nvim '
alias vim='nvim '
alias python='python3 '
alias claer='clear '
alias pypy='pypy3 '
# alias mux="PATH=$SAFEPATH tmuxinator "

# run a command with elevated permissions
elevate() {
    pushd $(pwd)
    cd /mnt/c/
    powershell.exe -Command "Start-Process cmd -ArgumentList  \"/c\",\"$1 2>&1\" -Verb RunAs"
    popd
}

# open a file
open() { explorer.exe $1; }

# create new github repo
ghrepo() { curl -u 'skeirik2' https://api.github.com/user/repos -d '{"name":"$1"}'; }

# find maude modules defined in code in given subdirectory
mmods() { rg "^\S*^f?mod" * | cut -d' ' -f2; }

# look-up files in a git repo with ext respecting ignore
fbe() { rg --files -g '*'"$1"; }

# tmux session shortcut from Everett
ts() {
    command="$1" ; shift
    session="$1"
    case "$command" in
        new)    tmux -s "$session" ;;
	attach) [ "$session" == "" ] && { echo "Usage: ts attach <session>"; return 1; } || tmux attach -t "$session" ;;
	kill)   [ "$session" == "" ] && { echo "Usage: ts kill <session>"; return 1; } || tmux kill-session  -t "$session" ;;
        ls)     tmux list-sessions ;;
	'')     tmux list-sessions ;;
        *)      echo "Unrecognized 'ts' command: '$command'" >&2
                return 1 ;;
    esac
}
